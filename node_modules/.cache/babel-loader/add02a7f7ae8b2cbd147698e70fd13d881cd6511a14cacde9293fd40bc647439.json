{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\dilshi\\\\dilshi\\\\web_app3\\\\railway_app\\\\src\\\\Reservation.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import Heading from \"./Heading\";\n// import Button from \"react-bootstrap/Button\";\n// import Form from \"react-bootstrap/Form\";\n// import \"./style.css\";\n// import Table from \"@mui/material/Table\";\n// import TableBody from \"@mui/material/TableBody\";\n// import TableCell from \"@mui/material/TableCell\";\n// import TableContainer from \"@mui/material/TableContainer\";\n// import TableHead from \"@mui/material/TableHead\";\n// import TableRow from \"@mui/material/TableRow\";\n// import {\n//   MDBFooter,\n//   MDBContainer,\n//   MDBCol,\n//   MDBRow,\n//   MDBIcon,\n//   MDBBtn,\n// } from \"mdb-react-ui-kit\";\n\n// export default function Reservation() {\n//   const [arrivalLocation, setArrivalLocation] = useState(\"\");\n//   const [departureLocation, setdepartureLocation] = useState(\"\");\n//   const [date, setDate] = useState(\"\");\n//   const [filteredTrains, setFilteredTrains] = useState([]);\n//   const [selectedRow, setSelectedRow] = useState(null);\n//   const [data, setData] = useState([]);\n//   const [selectedTrainData, setSelectedTrainData] = useState(null);\n\n//   useEffect(() => {\n//     fetchTrainData();\n//   }, []);\n\n//   const fetchTrainData = async () => {\n//     try {\n//       const response = await fetch(\"https://localhost:44327/api/Values\");\n//       const data = await response.json();\n//       setData(data);\n//     } catch (error) {\n//       console.error(\"Error fetching train data:\", error);\n//     }\n//   };\n\n//   const handleFormSubmit = (e) => {\n//     e.preventDefault();\n//     fetch(\n//       `https://localhost:44327/api/Values/train?arrivalLocation=${arrivalLocation}&departureLocation=${departureLocation}&date=${date}`\n//     )\n//       .then((res) => res.json())\n//       .then((data) => {\n//         setFilteredTrains(data);\n//         setSelectedRow(null);\n//       })\n//       .catch((error) => console.error(\"Error:\", error));\n//   };\n\n//   const handleBook = (train) => {\n//     setSelectedTrainData(train);\n//   };\n\n//   return (\n//     <>\n//       <Heading />\n\n//       <div\n//         style={{\n//           display: \"flex\",\n//           width: \"100%\",\n//           justifyContent: \"center\",\n//           alignItems: \"center\",\n//         }}\n//         className=\"box\"\n//       >\n//         <Form\n//           onSubmit={handleFormSubmit}\n//           style={{\n//             width: \"500px\",\n//             margin: \"2rem auto\",\n//             padding: \"1rem\",\n//             border: \"1px solid black\",\n//             alignItems: \"center\",\n//             justifyContent: \"center\",\n//             gap: \"1rem\",\n//             borderRadius: \"10px\",\n//           }}\n//         >\n//           <h3 className=\"text-center text-danger\">Select Your Train</h3>\n\n//           <Form.Group className=\"mb-3 \" controlId=\"arrivalLocation\">\n//             <Form.Label>Arrival Location</Form.Label>\n//             <Form.Select\n//               value={arrivalLocation}\n//               onChange={(e) => setArrivalLocation(e.target.value)}\n//             >\n//               <option>Choose...</option>\n//               {data.map((detail) => {\n//                 return (\n//                   <option key={detail.id}>{detail.arrivalLocation}</option>\n//                 );\n//               })}\n//             </Form.Select>\n//           </Form.Group>\n//           <Form.Group className=\"mb-3\" controlId=\"departureLocation\">\n//             <Form.Label>Departure Location</Form.Label>\n//             <Form.Select\n//               value={departureLocation}\n//               onChange={(e) => setdepartureLocation(e.target.value)}\n//             >\n//               <option value=\"\">Choose...</option>\n//               {data.map((detail) => {\n//                 return (\n//                   <option key={detail.id}>{detail.departureLocation}</option>\n//                 );\n//               })}\n//             </Form.Select>\n//           </Form.Group>\n//           <Form.Group className=\"mb-3\" controlId=\"date\">\n//             <Form.Label>Date</Form.Label>\n//             <Form.Control\n//               type=\"date\"\n//               name=\"date\"\n//               onChange={(e) => setDate(e.target.value)}\n//             />\n//           </Form.Group>\n\n//           <Button variant=\"danger\" type=\"submit\">\n//             Submit\n//           </Button>\n//         </Form>\n//         {filteredTrains && (\n//           <>\n\n//             {filteredTrains.map((datas) => (\n//               <div key={datas.id}>\n//                 <div>\n//                   <Button\n//                     style={{ margin: \"0 0.3rem\" }}\n//                     variant=\"danger\"\n//                     onClick={() => handleBook(datas)}\n//                   >\n//                     Book Now\n//                   </Button>\n//                 </div>\n//                 <h2>{datas.arrivalLocation}</h2>\n//                 <h2>{datas.departureLocation}</h2>\n//                 <h2>{datas.date}</h2>\n//               </div>\n//             ))}\n//           </>\n//         )}\n\n//       </div>\n//       {selectedTrainData && (\n//         <>\n//           <Form\n//             onSubmit={() => {\n//               alert(\"Train Book Successfull\");\n//             }}\n//             style={{\n//               width: \"500px\",\n//               margin: \"2rem 13rem\",\n//               padding: \"1rem\",\n//               border: \"1px solid black\",\n//               alignItems: \"center\",\n//               justifyContent: \"center\",\n//               gap: \"1rem\",\n//               borderRadius: \"10px\",\n//             }}\n//           >\n//             <h3 className=\"text-center text-danger\">Book Your Train</h3>\n//             <Form.Group className=\"mb-3 \" controlId=\"arrivalLocation\">\n//               <Form.Label>Arrival Location</Form.Label>\n//               <Form.Control\n//                 type=\"text\"\n//                 value={\n//                   selectedTrainData ? selectedTrainData.arrivalLocation : \"\"\n//                 }\n//                 readOnly\n//               />\n//             </Form.Group>\n//             <Form.Group className=\"mb-3\" controlId=\"departureLocation\">\n//               <Form.Label>Departure Location</Form.Label>\n//               <Form.Control\n//                 type=\"text\"\n//                 value={\n//                   selectedTrainData ? selectedTrainData.departureLocation : \"\"\n//                 }\n//                 readOnly\n//               />\n//             </Form.Group>\n//             <Form.Group className=\"mb-3\" controlId=\"date\">\n//               <Form.Label>Date</Form.Label>\n//               <Form.Control\n//                 type=\"text\"\n//                 value={selectedTrainData ? selectedTrainData.date : \"\"}\n//                 readOnly\n//               />\n//             </Form.Group>\n//             <Form.Group className=\"mb-3\" controlId=\"date\">\n//               <Form.Label>NIC number</Form.Label>\n//               <Form.Control type=\"text\" required />\n//             </Form.Group>\n//             <Form.Group className=\"mb-3\" controlId=\"date\">\n//               <Form.Label>Seats No</Form.Label>\n//               <Form.Control\n//                 type=\"number\"\n//                 placeholder=\"maximum:5\"\n//                 required\n//                 max={5}\n//                 min={0}\n//               />\n//             </Form.Group>\n//             <Form.Group className=\"mb-3\" controlId=\"date\">\n//               <Form.Label>Price tickey</Form.Label>\n//               <Form.Control type=\"text\" value={250} readOnly />\n//             </Form.Group>\n\n//             <Button variant=\"danger\" type=\"submit\" >\n//               Submit\n//             </Button>\n//           </Form>\n//         </>\n//       )}\n//       <MDBFooter\n//         style={{ marginTop: \"auto\" }}\n//         className=\"footer bg-danger text-center text-white\"\n//       >\n//         <div\n//           className=\"text-center p-3\"\n//           style={{ backgroundColor: \"rgba(0, 0, 0, 0.2)\" }}\n//         >\n//           Â© 2020 Copyright:\n//           <a className=\"text-white\" href=\"https://mdbootstrap.com/\">\n//             Sri Lanka Railway Department.com\n//           </a>\n//         </div>\n//       </MDBFooter>\n//     </>\n//   );\n// }\n\nimport React, { useState, useEffect } from \"react\";\nimport Heading from \"./Heading\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Reservation() {\n  _s();\n  const [arrivalLocation, setArrivalLocation] = useState(\"\");\n  const [departureLocation, setDepartureLocation] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [filteredTrains, setFilteredTrains] = useState([]);\n  useEffect(() => {\n    fetchTrainData();\n  }, []);\n  const fetchTrainData = async () => {\n    try {\n      const response = await axios.get(\"/api/trains\");\n      setFilteredTrains(response.data);\n    } catch (error) {\n      console.error(\"Error fetching train data:\", error);\n    }\n  };\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.get(\"/api/trains/search\", {\n        params: {\n          arrivalLocation,\n          departureLocation,\n          date\n        }\n      });\n      setFilteredTrains(response.data);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  const handleBook = train => {\n    console.log(\"Booking train:\", train);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleFormSubmit,\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center text-danger\",\n          children: \"Select Your Train\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"arrivalLocation\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Arrival Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: arrivalLocation,\n            onChange: e => setArrivalLocation(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"departureLocation\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Departure Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: departureLocation,\n            onChange: e => setDepartureLocation(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"date\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"date\",\n            value: date,\n            onChange: e => setDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), filteredTrains.length > 0 && /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Edit or Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Arrival Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Departure Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: filteredTrains.map(train => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  onClick: () => handleBook(train),\n                  children: \"Book Now\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: train.arrivalLocation\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: train.departureLocation\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: train.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 21\n              }, this)]\n            }, train.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Reservation, \"M+voj+sbYqMcqbxEi6JS19P1hw4=\");\n_c = Reservation;\nvar _c;\n$RefreshReg$(_c, \"Reservation\");","map":{"version":3,"names":["React","useState","useEffect","Heading","Button","Form","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Reservation","_s","arrivalLocation","setArrivalLocation","departureLocation","setDepartureLocation","date","setDate","filteredTrains","setFilteredTrains","fetchTrainData","response","get","data","error","console","handleFormSubmit","e","preventDefault","params","handleBook","train","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","Group","controlId","Label","Control","type","value","onChange","target","variant","length","map","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/dilshi/dilshi/web_app3/railway_app/src/Reservation.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import Heading from \"./Heading\";\r\n// import Button from \"react-bootstrap/Button\";\r\n// import Form from \"react-bootstrap/Form\";\r\n// import \"./style.css\";\r\n// import Table from \"@mui/material/Table\";\r\n// import TableBody from \"@mui/material/TableBody\";\r\n// import TableCell from \"@mui/material/TableCell\";\r\n// import TableContainer from \"@mui/material/TableContainer\";\r\n// import TableHead from \"@mui/material/TableHead\";\r\n// import TableRow from \"@mui/material/TableRow\";\r\n// import {\r\n//   MDBFooter,\r\n//   MDBContainer,\r\n//   MDBCol,\r\n//   MDBRow,\r\n//   MDBIcon,\r\n//   MDBBtn,\r\n// } from \"mdb-react-ui-kit\";\r\n\r\n// export default function Reservation() {\r\n//   const [arrivalLocation, setArrivalLocation] = useState(\"\");\r\n//   const [departureLocation, setdepartureLocation] = useState(\"\");\r\n//   const [date, setDate] = useState(\"\");\r\n//   const [filteredTrains, setFilteredTrains] = useState([]);\r\n//   const [selectedRow, setSelectedRow] = useState(null);\r\n//   const [data, setData] = useState([]);\r\n//   const [selectedTrainData, setSelectedTrainData] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     fetchTrainData();\r\n//   }, []);\r\n\r\n//   const fetchTrainData = async () => {\r\n//     try {\r\n//       const response = await fetch(\"https://localhost:44327/api/Values\");\r\n//       const data = await response.json();\r\n//       setData(data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching train data:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleFormSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     fetch(\r\n//       `https://localhost:44327/api/Values/train?arrivalLocation=${arrivalLocation}&departureLocation=${departureLocation}&date=${date}`\r\n//     )\r\n//       .then((res) => res.json())\r\n//       .then((data) => {\r\n//         setFilteredTrains(data);\r\n//         setSelectedRow(null);\r\n//       })\r\n//       .catch((error) => console.error(\"Error:\", error));\r\n//   };\r\n\r\n//   const handleBook = (train) => {\r\n//     setSelectedTrainData(train);\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Heading />\r\n\r\n//       <div\r\n//         style={{\r\n//           display: \"flex\",\r\n//           width: \"100%\",\r\n//           justifyContent: \"center\",\r\n//           alignItems: \"center\",\r\n//         }}\r\n//         className=\"box\"\r\n//       >\r\n//         <Form\r\n//           onSubmit={handleFormSubmit}\r\n//           style={{\r\n//             width: \"500px\",\r\n//             margin: \"2rem auto\",\r\n//             padding: \"1rem\",\r\n//             border: \"1px solid black\",\r\n//             alignItems: \"center\",\r\n//             justifyContent: \"center\",\r\n//             gap: \"1rem\",\r\n//             borderRadius: \"10px\",\r\n//           }}\r\n//         >\r\n//           <h3 className=\"text-center text-danger\">Select Your Train</h3>\r\n\r\n//           <Form.Group className=\"mb-3 \" controlId=\"arrivalLocation\">\r\n//             <Form.Label>Arrival Location</Form.Label>\r\n//             <Form.Select\r\n//               value={arrivalLocation}\r\n//               onChange={(e) => setArrivalLocation(e.target.value)}\r\n//             >\r\n//               <option>Choose...</option>\r\n//               {data.map((detail) => {\r\n//                 return (\r\n//                   <option key={detail.id}>{detail.arrivalLocation}</option>\r\n//                 );\r\n//               })}\r\n//             </Form.Select>\r\n//           </Form.Group>\r\n//           <Form.Group className=\"mb-3\" controlId=\"departureLocation\">\r\n//             <Form.Label>Departure Location</Form.Label>\r\n//             <Form.Select\r\n//               value={departureLocation}\r\n//               onChange={(e) => setdepartureLocation(e.target.value)}\r\n//             >\r\n//               <option value=\"\">Choose...</option>\r\n//               {data.map((detail) => {\r\n//                 return (\r\n//                   <option key={detail.id}>{detail.departureLocation}</option>\r\n//                 );\r\n//               })}\r\n//             </Form.Select>\r\n//           </Form.Group>\r\n//           <Form.Group className=\"mb-3\" controlId=\"date\">\r\n//             <Form.Label>Date</Form.Label>\r\n//             <Form.Control\r\n//               type=\"date\"\r\n//               name=\"date\"\r\n//               onChange={(e) => setDate(e.target.value)}\r\n//             />\r\n//           </Form.Group>\r\n\r\n//           <Button variant=\"danger\" type=\"submit\">\r\n//             Submit\r\n//           </Button>\r\n//         </Form>\r\n//         {filteredTrains && (\r\n//           <>\r\n\r\n//             {filteredTrains.map((datas) => (\r\n//               <div key={datas.id}>\r\n//                 <div>\r\n//                   <Button\r\n//                     style={{ margin: \"0 0.3rem\" }}\r\n//                     variant=\"danger\"\r\n//                     onClick={() => handleBook(datas)}\r\n//                   >\r\n//                     Book Now\r\n//                   </Button>\r\n//                 </div>\r\n//                 <h2>{datas.arrivalLocation}</h2>\r\n//                 <h2>{datas.departureLocation}</h2>\r\n//                 <h2>{datas.date}</h2>\r\n//               </div>\r\n//             ))}\r\n//           </>\r\n//         )}\r\n\r\n//       </div>\r\n//       {selectedTrainData && (\r\n//         <>\r\n//           <Form\r\n//             onSubmit={() => {\r\n//               alert(\"Train Book Successfull\");\r\n//             }}\r\n//             style={{\r\n//               width: \"500px\",\r\n//               margin: \"2rem 13rem\",\r\n//               padding: \"1rem\",\r\n//               border: \"1px solid black\",\r\n//               alignItems: \"center\",\r\n//               justifyContent: \"center\",\r\n//               gap: \"1rem\",\r\n//               borderRadius: \"10px\",\r\n//             }}\r\n//           >\r\n//             <h3 className=\"text-center text-danger\">Book Your Train</h3>\r\n//             <Form.Group className=\"mb-3 \" controlId=\"arrivalLocation\">\r\n//               <Form.Label>Arrival Location</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"text\"\r\n//                 value={\r\n//                   selectedTrainData ? selectedTrainData.arrivalLocation : \"\"\r\n//                 }\r\n//                 readOnly\r\n//               />\r\n//             </Form.Group>\r\n//             <Form.Group className=\"mb-3\" controlId=\"departureLocation\">\r\n//               <Form.Label>Departure Location</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"text\"\r\n//                 value={\r\n//                   selectedTrainData ? selectedTrainData.departureLocation : \"\"\r\n//                 }\r\n//                 readOnly\r\n//               />\r\n//             </Form.Group>\r\n//             <Form.Group className=\"mb-3\" controlId=\"date\">\r\n//               <Form.Label>Date</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"text\"\r\n//                 value={selectedTrainData ? selectedTrainData.date : \"\"}\r\n//                 readOnly\r\n//               />\r\n//             </Form.Group>\r\n//             <Form.Group className=\"mb-3\" controlId=\"date\">\r\n//               <Form.Label>NIC number</Form.Label>\r\n//               <Form.Control type=\"text\" required />\r\n//             </Form.Group>\r\n//             <Form.Group className=\"mb-3\" controlId=\"date\">\r\n//               <Form.Label>Seats No</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"number\"\r\n//                 placeholder=\"maximum:5\"\r\n//                 required\r\n//                 max={5}\r\n//                 min={0}\r\n//               />\r\n//             </Form.Group>\r\n//             <Form.Group className=\"mb-3\" controlId=\"date\">\r\n//               <Form.Label>Price tickey</Form.Label>\r\n//               <Form.Control type=\"text\" value={250} readOnly />\r\n//             </Form.Group>\r\n\r\n//             <Button variant=\"danger\" type=\"submit\" >\r\n//               Submit\r\n//             </Button>\r\n//           </Form>\r\n//         </>\r\n//       )}\r\n//       <MDBFooter\r\n//         style={{ marginTop: \"auto\" }}\r\n//         className=\"footer bg-danger text-center text-white\"\r\n//       >\r\n//         <div\r\n//           className=\"text-center p-3\"\r\n//           style={{ backgroundColor: \"rgba(0, 0, 0, 0.2)\" }}\r\n//         >\r\n//           Â© 2020 Copyright:\r\n//           <a className=\"text-white\" href=\"https://mdbootstrap.com/\">\r\n//             Sri Lanka Railway Department.com\r\n//           </a>\r\n//         </div>\r\n//       </MDBFooter>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Heading from \"./Heading\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Reservation() {\r\n  const [arrivalLocation, setArrivalLocation] = useState(\"\");\r\n  const [departureLocation, setDepartureLocation] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [filteredTrains, setFilteredTrains] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchTrainData();\r\n  }, []);\r\n\r\n  const fetchTrainData = async () => {\r\n    try {\r\n      const response = await axios.get(\"/api/trains\");\r\n      setFilteredTrains(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching train data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.get(\"/api/trains/search\", {\r\n        params: {\r\n          arrivalLocation,\r\n          departureLocation,\r\n          date,\r\n        },\r\n      });\r\n      setFilteredTrains(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  const handleBook = (train) => {\r\n    console.log(\"Booking train:\", train);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Heading />\r\n      <div className=\"box\">\r\n        <Form onSubmit={handleFormSubmit} className=\"form\">\r\n          <h3 className=\"text-center text-danger\">Select Your Train</h3>\r\n          <Form.Group controlId=\"arrivalLocation\">\r\n            <Form.Label>Arrival Location</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={arrivalLocation}\r\n              onChange={(e) => setArrivalLocation(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"departureLocation\">\r\n            <Form.Label>Departure Location</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={departureLocation}\r\n              onChange={(e) => setDepartureLocation(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"date\">\r\n            <Form.Label>Date</Form.Label>\r\n            <Form.Control\r\n              type=\"date\"\r\n              value={date}\r\n              onChange={(e) => setDate(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Button variant=\"danger\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n        {filteredTrains.length > 0 && (\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Edit or Delete</TableCell>\r\n                  <TableCell>Arrival Location</TableCell>\r\n                  <TableCell>Departure Location</TableCell>\r\n                  <TableCell>Date</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {filteredTrains.map((train) => (\r\n                  <TableRow key={train.id}>\r\n                    <TableCell>\r\n                      <Button\r\n                        variant=\"danger\"\r\n                        onClick={() => handleBook(train)}\r\n                      >\r\n                        Book Now\r\n                      </Button>\r\n                    </TableCell>\r\n                    <TableCell>{train.arrivalLocation}</TableCell>\r\n                    <TableCell>{train.departureLocation}</TableCell>\r\n                    <TableCell>{train.date}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}