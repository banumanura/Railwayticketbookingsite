{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\dilshi\\\\dilshi\\\\web_app3\\\\railway_app\\\\src\\\\Reservation.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import Heading from \"./Heading\";\n// import Button from \"react-bootstrap/Button\";\n// import Form from \"react-bootstrap/Form\";\n// import \"./style.css\";\n// import Table from \"@mui/material/Table\";\n// import TableBody from \"@mui/material/TableBody\";\n// import TableCell from \"@mui/material/TableCell\";\n// import TableContainer from \"@mui/material/TableContainer\";\n// import TableHead from \"@mui/material/TableHead\";\n// import TableRow from \"@mui/material/TableRow\";\n// import {\n//   MDBFooter,\n//   MDBContainer,\n//   MDBCol,\n//   MDBRow,\n//   MDBIcon,\n//   MDBBtn,\n// } from \"mdb-react-ui-kit\";\n\n// export default function Reservation() {\n//   const [arrivalLocation, setArrivalLocation] = useState(\"\");\n//   const [departureLocation, setdepartureLocation] = useState(\"\");\n//   const [date, setDate] = useState(\"\");\n//   const [filteredTrains, setFilteredTrains] = useState([]);\n//   const [selectedRow, setSelectedRow] = useState(null);\n//   const [data, setData] = useState([]);\n//   const [selectedTrainData, setSelectedTrainData] = useState(null);\n\n//   useEffect(() => {\n//     fetchTrainData();\n//   }, []);\n\n//   const fetchTrainData = async () => {\n//     try {\n//       const response = await fetch(\"https://localhost:44327/api/Values\");\n//       const data = await response.json();\n//       setData(data);\n//     } catch (error) {\n//       console.error(\"Error fetching train data:\", error);\n//     }\n//   };\n\n//   const handleFormSubmit = (e) => {\n//     e.preventDefault();\n//     fetch(\n//       `https://localhost:44327/api/Values/train?arrivalLocation=${arrivalLocation}&departureLocation=${departureLocation}&date=${date}`\n//     )\n//       .then((res) => res.json())\n//       .then((data) => {\n//         setFilteredTrains(data);\n//         setSelectedRow(null);\n//       })\n//       .catch((error) => console.error(\"Error:\", error));\n//   };\n\n//   const handleBook = (train) => {\n//     setSelectedTrainData(train);\n//   };\n\n//   return (\n//     <>\n//       <Heading />\n\n//       <div\n//         style={{\n//           display: \"flex\",\n//           width: \"100%\",\n//           justifyContent: \"center\",\n//           alignItems: \"center\",\n//         }}\n//         className=\"box\"\n//       >\n//         <Form\n//           onSubmit={handleFormSubmit}\n//           style={{\n//             width: \"500px\",\n//             margin: \"2rem auto\",\n//             padding: \"1rem\",\n//             border: \"1px solid black\",\n//             alignItems: \"center\",\n//             justifyContent: \"center\",\n//             gap: \"1rem\",\n//             borderRadius: \"10px\",\n//           }}\n//         >\n//           <h3 className=\"text-center text-danger\">Select Your Train</h3>\n\n//           <Form.Group className=\"mb-3 \" controlId=\"arrivalLocation\">\n//             <Form.Label>Arrival Location</Form.Label>\n//             <Form.Select\n//               value={arrivalLocation}\n//               onChange={(e) => setArrivalLocation(e.target.value)}\n//             >\n//               <option>Choose...</option>\n//               {data.map((detail) => {\n//                 return (\n//                   <option key={detail.id}>{detail.arrivalLocation}</option>\n//                 );\n//               })}\n//             </Form.Select>\n//           </Form.Group>\n//           <Form.Group className=\"mb-3\" controlId=\"departureLocation\">\n//             <Form.Label>Departure Location</Form.Label>\n//             <Form.Select\n//               value={departureLocation}\n//               onChange={(e) => setdepartureLocation(e.target.value)}\n//             >\n//               <option value=\"\">Choose...</option>\n//               {data.map((detail) => {\n//                 return (\n//                   <option key={detail.id}>{detail.departureLocation}</option>\n//                 );\n//               })}\n//             </Form.Select>\n//           </Form.Group>\n//           <Form.Group className=\"mb-3\" controlId=\"date\">\n//             <Form.Label>Date</Form.Label>\n//             <Form.Control\n//               type=\"date\"\n//               name=\"date\"\n//               onChange={(e) => setDate(e.target.value)}\n//             />\n//           </Form.Group>\n\n//           <Button variant=\"danger\" type=\"submit\">\n//             Submit\n//           </Button>\n//         </Form>\n//         {filteredTrains && (\n//           <>\n\n//             {filteredTrains.map((datas) => (\n//               <div key={datas.id}>\n//                 <div>\n//                   <Button\n//                     style={{ margin: \"0 0.3rem\" }}\n//                     variant=\"danger\"\n//                     onClick={() => handleBook(datas)}\n//                   >\n//                     Book Now\n//                   </Button>\n//                 </div>\n//                 <h2>{datas.arrivalLocation}</h2>\n//                 <h2>{datas.departureLocation}</h2>\n//                 <h2>{datas.date}</h2>\n//               </div>\n//             ))}\n//           </>\n//         )}\n\n//       </div>\n//       {selectedTrainData && (\n//         <>\n//           <Form\n//             onSubmit={() => {\n//               alert(\"Train Book Successfull\");\n//             }}\n//             style={{\n//               width: \"500px\",\n//               margin: \"2rem 13rem\",\n//               padding: \"1rem\",\n//               border: \"1px solid black\",\n//               alignItems: \"center\",\n//               justifyContent: \"center\",\n//               gap: \"1rem\",\n//               borderRadius: \"10px\",\n//             }}\n//           >\n//             <h3 className=\"text-center text-danger\">Book Your Train</h3>\n//             <Form.Group className=\"mb-3 \" controlId=\"arrivalLocation\">\n//               <Form.Label>Arrival Location</Form.Label>\n//               <Form.Control\n//                 type=\"text\"\n//                 value={\n//                   selectedTrainData ? selectedTrainData.arrivalLocation : \"\"\n//                 }\n//                 readOnly\n//               />\n//             </Form.Group>\n//             <Form.Group className=\"mb-3\" controlId=\"departureLocation\">\n//               <Form.Label>Departure Location</Form.Label>\n//               <Form.Control\n//                 type=\"text\"\n//                 value={\n//                   selectedTrainData ? selectedTrainData.departureLocation : \"\"\n//                 }\n//                 readOnly\n//               />\n//             </Form.Group>\n//             <Form.Group className=\"mb-3\" controlId=\"date\">\n//               <Form.Label>Date</Form.Label>\n//               <Form.Control\n//                 type=\"text\"\n//                 value={selectedTrainData ? selectedTrainData.date : \"\"}\n//                 readOnly\n//               />\n//             </Form.Group>\n//             <Form.Group className=\"mb-3\" controlId=\"date\">\n//               <Form.Label>NIC number</Form.Label>\n//               <Form.Control type=\"text\" required />\n//             </Form.Group>\n//             <Form.Group className=\"mb-3\" controlId=\"date\">\n//               <Form.Label>Seats No</Form.Label>\n//               <Form.Control\n//                 type=\"number\"\n//                 placeholder=\"maximum:5\"\n//                 required\n//                 max={5}\n//                 min={0}\n//               />\n//             </Form.Group>\n//             <Form.Group className=\"mb-3\" controlId=\"date\">\n//               <Form.Label>Price tickey</Form.Label>\n//               <Form.Control type=\"text\" value={250} readOnly />\n//             </Form.Group>\n\n//             <Button variant=\"danger\" type=\"submit\" >\n//               Submit\n//             </Button>\n//           </Form>\n//         </>\n//       )}\n//       <MDBFooter\n//         style={{ marginTop: \"auto\" }}\n//         className=\"footer bg-danger text-center text-white\"\n//       >\n//         <div\n//           className=\"text-center p-3\"\n//           style={{ backgroundColor: \"rgba(0, 0, 0, 0.2)\" }}\n//         >\n//           Â© 2020 Copyright:\n//           <a className=\"text-white\" href=\"https://mdbootstrap.com/\">\n//             Sri Lanka Railway Department.com\n//           </a>\n//         </div>\n//       </MDBFooter>\n//     </>\n//   );\n// }\n\nimport React, { useEffect, useState } from \"react\";\nimport * as SQL from \"sql.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Reservation() {\n  _s();\n  const [arrivalLocation, setArrivalLocation] = useState(\"\");\n  const [departureLocation, setDepartureLocation] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [filteredTrains, setFilteredTrains] = useState([]);\n  useEffect(() => {\n    fetchTrainData();\n  }, []);\n  const fetchTrainData = () => {\n    // Create a new database\n    const db = new SQL.Database();\n\n    // Open a database file (replace 'mydb.sqlite' with your database file)\n    fetch('mydb.newdb').then(response => response.arrayBuffer()).then(arrayBuffer => {\n      // Load the database from the array buffer\n      const uInt8Array = new Uint8Array(arrayBuffer);\n      db.open(uInt8Array);\n\n      // Execute a query to fetch train data\n      const query = `SELECT * FROM Railwaynew`;\n      const stmt = db.prepare(query);\n      const trains = [];\n      while (stmt.step()) {\n        const row = stmt.getAsObject();\n        trains.push(row);\n      }\n      setFilteredTrains(trains);\n    });\n  };\n  const handleFormSubmit = () => {\n    // Create a new database\n    const db = new SQL.Database();\n\n    // Open a database file (replace 'mydb.sqlite' with your database file)\n    fetch('mydb.newdb').then(response => response.arrayBuffer()).then(arrayBuffer => {\n      // Load the database from the array buffer\n      const uInt8Array = new Uint8Array(arrayBuffer);\n      db.open(uInt8Array);\n\n      // Execute a query to fetch filtered train data\n      const query = `SELECT * FROM Railwaynew WHERE arrivalLocation=? AND departureLocation=? AND date=?`;\n      const stmt = db.prepare(query);\n      stmt.bind([arrivalLocation, departureLocation, date]);\n      const trains = [];\n      while (stmt.step()) {\n        const row = stmt.getAsObject();\n        trains.push(row);\n      }\n      setFilteredTrains(trains);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Select Your Train\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Arrival Location\",\n      value: arrivalLocation,\n      onChange: e => setArrivalLocation(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Departure Location\",\n      value: departureLocation,\n      onChange: e => setDepartureLocation(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: date,\n      onChange: e => setDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFormSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredTrains.map(train => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Arrival Location: \", train.arrivalLocation]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Departure Location: \", train.departureLocation]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Date: \", train.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {/* Handle booking */},\n          children: \"Book Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this)]\n      }, train.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this);\n}\n_s(Reservation, \"M+voj+sbYqMcqbxEi6JS19P1hw4=\");\n_c = Reservation;\nvar _c;\n$RefreshReg$(_c, \"Reservation\");","map":{"version":3,"names":["React","useEffect","useState","SQL","jsxDEV","_jsxDEV","Reservation","_s","arrivalLocation","setArrivalLocation","departureLocation","setDepartureLocation","date","setDate","filteredTrains","setFilteredTrains","fetchTrainData","db","Database","fetch","then","response","arrayBuffer","uInt8Array","Uint8Array","open","query","stmt","prepare","trains","step","row","getAsObject","push","handleFormSubmit","bind","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","train","id","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/dilshi/dilshi/web_app3/railway_app/src/Reservation.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import Heading from \"./Heading\";\r\n// import Button from \"react-bootstrap/Button\";\r\n// import Form from \"react-bootstrap/Form\";\r\n// import \"./style.css\";\r\n// import Table from \"@mui/material/Table\";\r\n// import TableBody from \"@mui/material/TableBody\";\r\n// import TableCell from \"@mui/material/TableCell\";\r\n// import TableContainer from \"@mui/material/TableContainer\";\r\n// import TableHead from \"@mui/material/TableHead\";\r\n// import TableRow from \"@mui/material/TableRow\";\r\n// import {\r\n//   MDBFooter,\r\n//   MDBContainer,\r\n//   MDBCol,\r\n//   MDBRow,\r\n//   MDBIcon,\r\n//   MDBBtn,\r\n// } from \"mdb-react-ui-kit\";\r\n\r\n// export default function Reservation() {\r\n//   const [arrivalLocation, setArrivalLocation] = useState(\"\");\r\n//   const [departureLocation, setdepartureLocation] = useState(\"\");\r\n//   const [date, setDate] = useState(\"\");\r\n//   const [filteredTrains, setFilteredTrains] = useState([]);\r\n//   const [selectedRow, setSelectedRow] = useState(null);\r\n//   const [data, setData] = useState([]);\r\n//   const [selectedTrainData, setSelectedTrainData] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     fetchTrainData();\r\n//   }, []);\r\n\r\n//   const fetchTrainData = async () => {\r\n//     try {\r\n//       const response = await fetch(\"https://localhost:44327/api/Values\");\r\n//       const data = await response.json();\r\n//       setData(data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching train data:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleFormSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     fetch(\r\n//       `https://localhost:44327/api/Values/train?arrivalLocation=${arrivalLocation}&departureLocation=${departureLocation}&date=${date}`\r\n//     )\r\n//       .then((res) => res.json())\r\n//       .then((data) => {\r\n//         setFilteredTrains(data);\r\n//         setSelectedRow(null);\r\n//       })\r\n//       .catch((error) => console.error(\"Error:\", error));\r\n//   };\r\n\r\n//   const handleBook = (train) => {\r\n//     setSelectedTrainData(train);\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Heading />\r\n\r\n//       <div\r\n//         style={{\r\n//           display: \"flex\",\r\n//           width: \"100%\",\r\n//           justifyContent: \"center\",\r\n//           alignItems: \"center\",\r\n//         }}\r\n//         className=\"box\"\r\n//       >\r\n//         <Form\r\n//           onSubmit={handleFormSubmit}\r\n//           style={{\r\n//             width: \"500px\",\r\n//             margin: \"2rem auto\",\r\n//             padding: \"1rem\",\r\n//             border: \"1px solid black\",\r\n//             alignItems: \"center\",\r\n//             justifyContent: \"center\",\r\n//             gap: \"1rem\",\r\n//             borderRadius: \"10px\",\r\n//           }}\r\n//         >\r\n//           <h3 className=\"text-center text-danger\">Select Your Train</h3>\r\n\r\n//           <Form.Group className=\"mb-3 \" controlId=\"arrivalLocation\">\r\n//             <Form.Label>Arrival Location</Form.Label>\r\n//             <Form.Select\r\n//               value={arrivalLocation}\r\n//               onChange={(e) => setArrivalLocation(e.target.value)}\r\n//             >\r\n//               <option>Choose...</option>\r\n//               {data.map((detail) => {\r\n//                 return (\r\n//                   <option key={detail.id}>{detail.arrivalLocation}</option>\r\n//                 );\r\n//               })}\r\n//             </Form.Select>\r\n//           </Form.Group>\r\n//           <Form.Group className=\"mb-3\" controlId=\"departureLocation\">\r\n//             <Form.Label>Departure Location</Form.Label>\r\n//             <Form.Select\r\n//               value={departureLocation}\r\n//               onChange={(e) => setdepartureLocation(e.target.value)}\r\n//             >\r\n//               <option value=\"\">Choose...</option>\r\n//               {data.map((detail) => {\r\n//                 return (\r\n//                   <option key={detail.id}>{detail.departureLocation}</option>\r\n//                 );\r\n//               })}\r\n//             </Form.Select>\r\n//           </Form.Group>\r\n//           <Form.Group className=\"mb-3\" controlId=\"date\">\r\n//             <Form.Label>Date</Form.Label>\r\n//             <Form.Control\r\n//               type=\"date\"\r\n//               name=\"date\"\r\n//               onChange={(e) => setDate(e.target.value)}\r\n//             />\r\n//           </Form.Group>\r\n\r\n//           <Button variant=\"danger\" type=\"submit\">\r\n//             Submit\r\n//           </Button>\r\n//         </Form>\r\n//         {filteredTrains && (\r\n//           <>\r\n\r\n//             {filteredTrains.map((datas) => (\r\n//               <div key={datas.id}>\r\n//                 <div>\r\n//                   <Button\r\n//                     style={{ margin: \"0 0.3rem\" }}\r\n//                     variant=\"danger\"\r\n//                     onClick={() => handleBook(datas)}\r\n//                   >\r\n//                     Book Now\r\n//                   </Button>\r\n//                 </div>\r\n//                 <h2>{datas.arrivalLocation}</h2>\r\n//                 <h2>{datas.departureLocation}</h2>\r\n//                 <h2>{datas.date}</h2>\r\n//               </div>\r\n//             ))}\r\n//           </>\r\n//         )}\r\n\r\n//       </div>\r\n//       {selectedTrainData && (\r\n//         <>\r\n//           <Form\r\n//             onSubmit={() => {\r\n//               alert(\"Train Book Successfull\");\r\n//             }}\r\n//             style={{\r\n//               width: \"500px\",\r\n//               margin: \"2rem 13rem\",\r\n//               padding: \"1rem\",\r\n//               border: \"1px solid black\",\r\n//               alignItems: \"center\",\r\n//               justifyContent: \"center\",\r\n//               gap: \"1rem\",\r\n//               borderRadius: \"10px\",\r\n//             }}\r\n//           >\r\n//             <h3 className=\"text-center text-danger\">Book Your Train</h3>\r\n//             <Form.Group className=\"mb-3 \" controlId=\"arrivalLocation\">\r\n//               <Form.Label>Arrival Location</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"text\"\r\n//                 value={\r\n//                   selectedTrainData ? selectedTrainData.arrivalLocation : \"\"\r\n//                 }\r\n//                 readOnly\r\n//               />\r\n//             </Form.Group>\r\n//             <Form.Group className=\"mb-3\" controlId=\"departureLocation\">\r\n//               <Form.Label>Departure Location</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"text\"\r\n//                 value={\r\n//                   selectedTrainData ? selectedTrainData.departureLocation : \"\"\r\n//                 }\r\n//                 readOnly\r\n//               />\r\n//             </Form.Group>\r\n//             <Form.Group className=\"mb-3\" controlId=\"date\">\r\n//               <Form.Label>Date</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"text\"\r\n//                 value={selectedTrainData ? selectedTrainData.date : \"\"}\r\n//                 readOnly\r\n//               />\r\n//             </Form.Group>\r\n//             <Form.Group className=\"mb-3\" controlId=\"date\">\r\n//               <Form.Label>NIC number</Form.Label>\r\n//               <Form.Control type=\"text\" required />\r\n//             </Form.Group>\r\n//             <Form.Group className=\"mb-3\" controlId=\"date\">\r\n//               <Form.Label>Seats No</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"number\"\r\n//                 placeholder=\"maximum:5\"\r\n//                 required\r\n//                 max={5}\r\n//                 min={0}\r\n//               />\r\n//             </Form.Group>\r\n//             <Form.Group className=\"mb-3\" controlId=\"date\">\r\n//               <Form.Label>Price tickey</Form.Label>\r\n//               <Form.Control type=\"text\" value={250} readOnly />\r\n//             </Form.Group>\r\n\r\n//             <Button variant=\"danger\" type=\"submit\" >\r\n//               Submit\r\n//             </Button>\r\n//           </Form>\r\n//         </>\r\n//       )}\r\n//       <MDBFooter\r\n//         style={{ marginTop: \"auto\" }}\r\n//         className=\"footer bg-danger text-center text-white\"\r\n//       >\r\n//         <div\r\n//           className=\"text-center p-3\"\r\n//           style={{ backgroundColor: \"rgba(0, 0, 0, 0.2)\" }}\r\n//         >\r\n//           Â© 2020 Copyright:\r\n//           <a className=\"text-white\" href=\"https://mdbootstrap.com/\">\r\n//             Sri Lanka Railway Department.com\r\n//           </a>\r\n//         </div>\r\n//       </MDBFooter>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport * as SQL from \"sql.js\";\r\n\r\nexport default function Reservation() {\r\n  const [arrivalLocation, setArrivalLocation] = useState(\"\");\r\n  const [departureLocation, setDepartureLocation] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [filteredTrains, setFilteredTrains] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchTrainData();\r\n  }, []);\r\n\r\n  const fetchTrainData = () => {\r\n    // Create a new database\r\n    const db = new SQL.Database();\r\n\r\n    // Open a database file (replace 'mydb.sqlite' with your database file)\r\n    fetch('mydb.newdb')\r\n      .then((response) => response.arrayBuffer())\r\n      .then((arrayBuffer) => {\r\n        // Load the database from the array buffer\r\n        const uInt8Array = new Uint8Array(arrayBuffer);\r\n        db.open(uInt8Array);\r\n\r\n        // Execute a query to fetch train data\r\n        const query = `SELECT * FROM Railwaynew`;\r\n        const stmt = db.prepare(query);\r\n        const trains = [];\r\n        while (stmt.step()) {\r\n          const row = stmt.getAsObject();\r\n          trains.push(row);\r\n        }\r\n        setFilteredTrains(trains);\r\n      });\r\n  };\r\n\r\n  const handleFormSubmit = () => {\r\n    // Create a new database\r\n    const db = new SQL.Database();\r\n\r\n    // Open a database file (replace 'mydb.sqlite' with your database file)\r\n    fetch('mydb.newdb')\r\n      .then((response) => response.arrayBuffer())\r\n      .then((arrayBuffer) => {\r\n        // Load the database from the array buffer\r\n        const uInt8Array = new Uint8Array(arrayBuffer);\r\n        db.open(uInt8Array);\r\n\r\n        // Execute a query to fetch filtered train data\r\n        const query = `SELECT * FROM Railwaynew WHERE arrivalLocation=? AND departureLocation=? AND date=?`;\r\n        const stmt = db.prepare(query);\r\n        stmt.bind([arrivalLocation, departureLocation, date]);\r\n        const trains = [];\r\n        while (stmt.step()) {\r\n          const row = stmt.getAsObject();\r\n          trains.push(row);\r\n        }\r\n        setFilteredTrains(trains);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Select Your Train</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Arrival Location\"\r\n        value={arrivalLocation}\r\n        onChange={(e) => setArrivalLocation(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Departure Location\"\r\n        value={departureLocation}\r\n        onChange={(e) => setDepartureLocation(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"date\"\r\n        value={date}\r\n        onChange={(e) => setDate(e.target.value)}\r\n      />\r\n      <button onClick={handleFormSubmit}>Submit</button>\r\n      <ul>\r\n        {filteredTrains.map((train) => (\r\n          <li key={train.id}>\r\n            <div>Arrival Location: {train.arrivalLocation}</div>\r\n            <div>Departure Location: {train.departureLocation}</div>\r\n            <div>Date: {train.date}</div>\r\n            <button onClick={() => {/* Handle booking */}}>Book Now</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}