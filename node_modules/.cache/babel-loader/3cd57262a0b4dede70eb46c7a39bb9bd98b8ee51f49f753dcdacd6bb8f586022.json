{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\dilshi\\\\dilshi\\\\web_app3\\\\railway_app\\\\src\\\\Reservation.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import Heading from \"./Heading\";\n// import Button from \"react-bootstrap/Button\";\n// import Form from \"react-bootstrap/Form\";\n// import \"./style.css\";\n// import Table from \"@mui/material/Table\";\n// import TableBody from \"@mui/material/TableBody\";\n// import TableCell from \"@mui/material/TableCell\";\n// import TableContainer from \"@mui/material/TableContainer\";\n// import TableHead from \"@mui/material/TableHead\";\n// import TableRow from \"@mui/material/TableRow\";\n// import {\n//   MDBFooter,\n//   MDBContainer,\n//   MDBCol,\n//   MDBRow,\n//   MDBIcon,\n//   MDBBtn,\n// } from \"mdb-react-ui-kit\";\n\n// export default function Reservation() {\n//   const [arrivalLocation, setArrivalLocation] = useState(\"\");\n//   const [departureLocation, setdepartureLocation] = useState(\"\");\n//   const [date, setDate] = useState(\"\");\n//   const [filteredTrains, setFilteredTrains] = useState([]);\n//   const [selectedRow, setSelectedRow] = useState(null);\n//   const [data, setData] = useState([]);\n//   const [selectedTrainData, setSelectedTrainData] = useState(null);\n\n//   useEffect(() => {\n//     fetchTrainData();\n//   }, []);\n\n//   const fetchTrainData = async () => {\n//     try {\n//       const response = await fetch(\"https://localhost:44327/api/Values\");\n//       const data = await response.json();\n//       setData(data);\n//     } catch (error) {\n//       console.error(\"Error fetching train data:\", error);\n//     }\n//   };\n\n//   const handleFormSubmit = (e) => {\n//     e.preventDefault();\n//     fetch(\n//       `https://localhost:44327/api/Values/train?arrivalLocation=${arrivalLocation}&departureLocation=${departureLocation}&date=${date}`\n//     )\n//       .then((res) => res.json())\n//       .then((data) => {\n//         setFilteredTrains(data);\n//         setSelectedRow(null);\n//       })\n//       .catch((error) => console.error(\"Error:\", error));\n//   };\n\n//   const handleBook = (train) => {\n//     setSelectedTrainData(train);\n//   };\n\n//   return (\n//     <>\n//       <Heading />\n\n//       <div\n//         style={{\n//           display: \"flex\",\n//           width: \"100%\",\n//           justifyContent: \"center\",\n//           alignItems: \"center\",\n//         }}\n//         className=\"box\"\n//       >\n//         <Form\n//           onSubmit={handleFormSubmit}\n//           style={{\n//             width: \"500px\",\n//             margin: \"2rem auto\",\n//             padding: \"1rem\",\n//             border: \"1px solid black\",\n//             alignItems: \"center\",\n//             justifyContent: \"center\",\n//             gap: \"1rem\",\n//             borderRadius: \"10px\",\n//           }}\n//         >\n//           <h3 className=\"text-center text-danger\">Select Your Train</h3>\n\n//           <Form.Group className=\"mb-3 \" controlId=\"arrivalLocation\">\n//             <Form.Label>Arrival Location</Form.Label>\n//             <Form.Select\n//               value={arrivalLocation}\n//               onChange={(e) => setArrivalLocation(e.target.value)}\n//             >\n//               <option>Choose...</option>\n//               {data.map((detail) => {\n//                 return (\n//                   <option key={detail.id}>{detail.arrivalLocation}</option>\n//                 );\n//               })}\n//             </Form.Select>\n//           </Form.Group>\n//           <Form.Group className=\"mb-3\" controlId=\"departureLocation\">\n//             <Form.Label>Departure Location</Form.Label>\n//             <Form.Select\n//               value={departureLocation}\n//               onChange={(e) => setdepartureLocation(e.target.value)}\n//             >\n//               <option value=\"\">Choose...</option>\n//               {data.map((detail) => {\n//                 return (\n//                   <option key={detail.id}>{detail.departureLocation}</option>\n//                 );\n//               })}\n//             </Form.Select>\n//           </Form.Group>\n//           <Form.Group className=\"mb-3\" controlId=\"date\">\n//             <Form.Label>Date</Form.Label>\n//             <Form.Control\n//               type=\"date\"\n//               name=\"date\"\n//               onChange={(e) => setDate(e.target.value)}\n//             />\n//           </Form.Group>\n\n//           <Button variant=\"danger\" type=\"submit\">\n//             Submit\n//           </Button>\n//         </Form>\n//         {filteredTrains && (\n//           <>\n\n//             {filteredTrains.map((datas) => (\n//               <div key={datas.id}>\n//                 <div>\n//                   <Button\n//                     style={{ margin: \"0 0.3rem\" }}\n//                     variant=\"danger\"\n//                     onClick={() => handleBook(datas)}\n//                   >\n//                     Book Now\n//                   </Button>\n//                 </div>\n//                 <h2>{datas.arrivalLocation}</h2>\n//                 <h2>{datas.departureLocation}</h2>\n//                 <h2>{datas.date}</h2>\n//               </div>\n//             ))}\n//           </>\n//         )}\n\n//       </div>\n//       {selectedTrainData && (\n//         <>\n//           <Form\n//             onSubmit={() => {\n//               alert(\"Train Book Successfull\");\n//             }}\n//             style={{\n//               width: \"500px\",\n//               margin: \"2rem 13rem\",\n//               padding: \"1rem\",\n//               border: \"1px solid black\",\n//               alignItems: \"center\",\n//               justifyContent: \"center\",\n//               gap: \"1rem\",\n//               borderRadius: \"10px\",\n//             }}\n//           >\n//             <h3 className=\"text-center text-danger\">Book Your Train</h3>\n//             <Form.Group className=\"mb-3 \" controlId=\"arrivalLocation\">\n//               <Form.Label>Arrival Location</Form.Label>\n//               <Form.Control\n//                 type=\"text\"\n//                 value={\n//                   selectedTrainData ? selectedTrainData.arrivalLocation : \"\"\n//                 }\n//                 readOnly\n//               />\n//             </Form.Group>\n//             <Form.Group className=\"mb-3\" controlId=\"departureLocation\">\n//               <Form.Label>Departure Location</Form.Label>\n//               <Form.Control\n//                 type=\"text\"\n//                 value={\n//                   selectedTrainData ? selectedTrainData.departureLocation : \"\"\n//                 }\n//                 readOnly\n//               />\n//             </Form.Group>\n//             <Form.Group className=\"mb-3\" controlId=\"date\">\n//               <Form.Label>Date</Form.Label>\n//               <Form.Control\n//                 type=\"text\"\n//                 value={selectedTrainData ? selectedTrainData.date : \"\"}\n//                 readOnly\n//               />\n//             </Form.Group>\n//             <Form.Group className=\"mb-3\" controlId=\"date\">\n//               <Form.Label>NIC number</Form.Label>\n//               <Form.Control type=\"text\" required />\n//             </Form.Group>\n//             <Form.Group className=\"mb-3\" controlId=\"date\">\n//               <Form.Label>Seats No</Form.Label>\n//               <Form.Control\n//                 type=\"number\"\n//                 placeholder=\"maximum:5\"\n//                 required\n//                 max={5}\n//                 min={0}\n//               />\n//             </Form.Group>\n//             <Form.Group className=\"mb-3\" controlId=\"date\">\n//               <Form.Label>Price tickey</Form.Label>\n//               <Form.Control type=\"text\" value={250} readOnly />\n//             </Form.Group>\n\n//             <Button variant=\"danger\" type=\"submit\" >\n//               Submit\n//             </Button>\n//           </Form>\n//         </>\n//       )}\n//       <MDBFooter\n//         style={{ marginTop: \"auto\" }}\n//         className=\"footer bg-danger text-center text-white\"\n//       >\n//         <div\n//           className=\"text-center p-3\"\n//           style={{ backgroundColor: \"rgba(0, 0, 0, 0.2)\" }}\n//         >\n//           Â© 2020 Copyright:\n//           <a className=\"text-white\" href=\"https://mdbootstrap.com/\">\n//             Sri Lanka Railway Department.com\n//           </a>\n//         </div>\n//       </MDBFooter>\n//     </>\n//   );\n// }\n\nimport React, { useEffect, useState } from \"react\";\nimport { View, Text, Button, TextInput, FlatList } from \"react-native\";\nimport SQLite from \"react-native-sqlite-storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst db = SQLite.openDatabase({\n  name: \"newdb.db\",\n  location: \"default\"\n});\nexport default function App() {\n  _s();\n  const [arrivalLocation, setArrivalLocation] = useState(\"\");\n  const [departureLocation, setDepartureLocation] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [filteredTrains, setFilteredTrains] = useState([]);\n  useEffect(() => {\n    fetchTrainData();\n  }, []);\n  const fetchTrainData = () => {\n    db.transaction(tx => {\n      tx.executeSql(\"SELECT * FROM trains\", [], (_, {\n        rows\n      }) => {\n        const data = rows._array;\n        setFilteredTrains(data);\n      }, error => {\n        console.error(\"Error fetching train data:\", error);\n      });\n    });\n  };\n  const handleFormSubmit = () => {\n    db.transaction(tx => {\n      tx.executeSql(\"SELECT * FROM trains WHERE arrivalLocation=? AND departureLocation=? AND date=?\", [arrivalLocation, departureLocation, date], (_, {\n        rows\n      }) => {\n        const data = rows._array;\n        setFilteredTrains(data);\n      }, error => {\n        console.error(\"Error fetching filtered train data:\", error);\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      children: \"Select Your Train\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      placeholder: \"Arrival Location\",\n      value: arrivalLocation,\n      onChangeText: setArrivalLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      placeholder: \"Departure Location\",\n      value: departureLocation,\n      onChangeText: setDepartureLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      placeholder: \"Date\",\n      value: date,\n      onChangeText: setDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Submit\",\n      onPress: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlatList, {\n      data: filteredTrains,\n      keyExtractor: item => item.id.toString(),\n      renderItem: ({\n        item\n      }) => /*#__PURE__*/_jsxDEV(View, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: [\"Arrival Location: \", item.arrivalLocation]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"Departure Location: \", item.departureLocation]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"Date: \", item.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          title: \"Book Now\",\n          onPress: () => {/* Handle booking */}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"M+voj+sbYqMcqbxEi6JS19P1hw4=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","View","Text","Button","TextInput","FlatList","SQLite","jsxDEV","_jsxDEV","db","openDatabase","name","location","App","_s","arrivalLocation","setArrivalLocation","departureLocation","setDepartureLocation","date","setDate","filteredTrains","setFilteredTrains","fetchTrainData","transaction","tx","executeSql","_","rows","data","_array","error","console","handleFormSubmit","style","flex","alignItems","justifyContent","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChangeText","title","onPress","keyExtractor","item","id","toString","renderItem","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/dilshi/dilshi/web_app3/railway_app/src/Reservation.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import Heading from \"./Heading\";\r\n// import Button from \"react-bootstrap/Button\";\r\n// import Form from \"react-bootstrap/Form\";\r\n// import \"./style.css\";\r\n// import Table from \"@mui/material/Table\";\r\n// import TableBody from \"@mui/material/TableBody\";\r\n// import TableCell from \"@mui/material/TableCell\";\r\n// import TableContainer from \"@mui/material/TableContainer\";\r\n// import TableHead from \"@mui/material/TableHead\";\r\n// import TableRow from \"@mui/material/TableRow\";\r\n// import {\r\n//   MDBFooter,\r\n//   MDBContainer,\r\n//   MDBCol,\r\n//   MDBRow,\r\n//   MDBIcon,\r\n//   MDBBtn,\r\n// } from \"mdb-react-ui-kit\";\r\n\r\n// export default function Reservation() {\r\n//   const [arrivalLocation, setArrivalLocation] = useState(\"\");\r\n//   const [departureLocation, setdepartureLocation] = useState(\"\");\r\n//   const [date, setDate] = useState(\"\");\r\n//   const [filteredTrains, setFilteredTrains] = useState([]);\r\n//   const [selectedRow, setSelectedRow] = useState(null);\r\n//   const [data, setData] = useState([]);\r\n//   const [selectedTrainData, setSelectedTrainData] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     fetchTrainData();\r\n//   }, []);\r\n\r\n//   const fetchTrainData = async () => {\r\n//     try {\r\n//       const response = await fetch(\"https://localhost:44327/api/Values\");\r\n//       const data = await response.json();\r\n//       setData(data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching train data:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleFormSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     fetch(\r\n//       `https://localhost:44327/api/Values/train?arrivalLocation=${arrivalLocation}&departureLocation=${departureLocation}&date=${date}`\r\n//     )\r\n//       .then((res) => res.json())\r\n//       .then((data) => {\r\n//         setFilteredTrains(data);\r\n//         setSelectedRow(null);\r\n//       })\r\n//       .catch((error) => console.error(\"Error:\", error));\r\n//   };\r\n\r\n//   const handleBook = (train) => {\r\n//     setSelectedTrainData(train);\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Heading />\r\n\r\n//       <div\r\n//         style={{\r\n//           display: \"flex\",\r\n//           width: \"100%\",\r\n//           justifyContent: \"center\",\r\n//           alignItems: \"center\",\r\n//         }}\r\n//         className=\"box\"\r\n//       >\r\n//         <Form\r\n//           onSubmit={handleFormSubmit}\r\n//           style={{\r\n//             width: \"500px\",\r\n//             margin: \"2rem auto\",\r\n//             padding: \"1rem\",\r\n//             border: \"1px solid black\",\r\n//             alignItems: \"center\",\r\n//             justifyContent: \"center\",\r\n//             gap: \"1rem\",\r\n//             borderRadius: \"10px\",\r\n//           }}\r\n//         >\r\n//           <h3 className=\"text-center text-danger\">Select Your Train</h3>\r\n\r\n//           <Form.Group className=\"mb-3 \" controlId=\"arrivalLocation\">\r\n//             <Form.Label>Arrival Location</Form.Label>\r\n//             <Form.Select\r\n//               value={arrivalLocation}\r\n//               onChange={(e) => setArrivalLocation(e.target.value)}\r\n//             >\r\n//               <option>Choose...</option>\r\n//               {data.map((detail) => {\r\n//                 return (\r\n//                   <option key={detail.id}>{detail.arrivalLocation}</option>\r\n//                 );\r\n//               })}\r\n//             </Form.Select>\r\n//           </Form.Group>\r\n//           <Form.Group className=\"mb-3\" controlId=\"departureLocation\">\r\n//             <Form.Label>Departure Location</Form.Label>\r\n//             <Form.Select\r\n//               value={departureLocation}\r\n//               onChange={(e) => setdepartureLocation(e.target.value)}\r\n//             >\r\n//               <option value=\"\">Choose...</option>\r\n//               {data.map((detail) => {\r\n//                 return (\r\n//                   <option key={detail.id}>{detail.departureLocation}</option>\r\n//                 );\r\n//               })}\r\n//             </Form.Select>\r\n//           </Form.Group>\r\n//           <Form.Group className=\"mb-3\" controlId=\"date\">\r\n//             <Form.Label>Date</Form.Label>\r\n//             <Form.Control\r\n//               type=\"date\"\r\n//               name=\"date\"\r\n//               onChange={(e) => setDate(e.target.value)}\r\n//             />\r\n//           </Form.Group>\r\n\r\n//           <Button variant=\"danger\" type=\"submit\">\r\n//             Submit\r\n//           </Button>\r\n//         </Form>\r\n//         {filteredTrains && (\r\n//           <>\r\n\r\n//             {filteredTrains.map((datas) => (\r\n//               <div key={datas.id}>\r\n//                 <div>\r\n//                   <Button\r\n//                     style={{ margin: \"0 0.3rem\" }}\r\n//                     variant=\"danger\"\r\n//                     onClick={() => handleBook(datas)}\r\n//                   >\r\n//                     Book Now\r\n//                   </Button>\r\n//                 </div>\r\n//                 <h2>{datas.arrivalLocation}</h2>\r\n//                 <h2>{datas.departureLocation}</h2>\r\n//                 <h2>{datas.date}</h2>\r\n//               </div>\r\n//             ))}\r\n//           </>\r\n//         )}\r\n\r\n//       </div>\r\n//       {selectedTrainData && (\r\n//         <>\r\n//           <Form\r\n//             onSubmit={() => {\r\n//               alert(\"Train Book Successfull\");\r\n//             }}\r\n//             style={{\r\n//               width: \"500px\",\r\n//               margin: \"2rem 13rem\",\r\n//               padding: \"1rem\",\r\n//               border: \"1px solid black\",\r\n//               alignItems: \"center\",\r\n//               justifyContent: \"center\",\r\n//               gap: \"1rem\",\r\n//               borderRadius: \"10px\",\r\n//             }}\r\n//           >\r\n//             <h3 className=\"text-center text-danger\">Book Your Train</h3>\r\n//             <Form.Group className=\"mb-3 \" controlId=\"arrivalLocation\">\r\n//               <Form.Label>Arrival Location</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"text\"\r\n//                 value={\r\n//                   selectedTrainData ? selectedTrainData.arrivalLocation : \"\"\r\n//                 }\r\n//                 readOnly\r\n//               />\r\n//             </Form.Group>\r\n//             <Form.Group className=\"mb-3\" controlId=\"departureLocation\">\r\n//               <Form.Label>Departure Location</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"text\"\r\n//                 value={\r\n//                   selectedTrainData ? selectedTrainData.departureLocation : \"\"\r\n//                 }\r\n//                 readOnly\r\n//               />\r\n//             </Form.Group>\r\n//             <Form.Group className=\"mb-3\" controlId=\"date\">\r\n//               <Form.Label>Date</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"text\"\r\n//                 value={selectedTrainData ? selectedTrainData.date : \"\"}\r\n//                 readOnly\r\n//               />\r\n//             </Form.Group>\r\n//             <Form.Group className=\"mb-3\" controlId=\"date\">\r\n//               <Form.Label>NIC number</Form.Label>\r\n//               <Form.Control type=\"text\" required />\r\n//             </Form.Group>\r\n//             <Form.Group className=\"mb-3\" controlId=\"date\">\r\n//               <Form.Label>Seats No</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"number\"\r\n//                 placeholder=\"maximum:5\"\r\n//                 required\r\n//                 max={5}\r\n//                 min={0}\r\n//               />\r\n//             </Form.Group>\r\n//             <Form.Group className=\"mb-3\" controlId=\"date\">\r\n//               <Form.Label>Price tickey</Form.Label>\r\n//               <Form.Control type=\"text\" value={250} readOnly />\r\n//             </Form.Group>\r\n\r\n//             <Button variant=\"danger\" type=\"submit\" >\r\n//               Submit\r\n//             </Button>\r\n//           </Form>\r\n//         </>\r\n//       )}\r\n//       <MDBFooter\r\n//         style={{ marginTop: \"auto\" }}\r\n//         className=\"footer bg-danger text-center text-white\"\r\n//       >\r\n//         <div\r\n//           className=\"text-center p-3\"\r\n//           style={{ backgroundColor: \"rgba(0, 0, 0, 0.2)\" }}\r\n//         >\r\n//           Â© 2020 Copyright:\r\n//           <a className=\"text-white\" href=\"https://mdbootstrap.com/\">\r\n//             Sri Lanka Railway Department.com\r\n//           </a>\r\n//         </div>\r\n//       </MDBFooter>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { View, Text, Button, TextInput, FlatList } from \"react-native\";\r\nimport SQLite from \"react-native-sqlite-storage\";\r\n\r\nconst db = SQLite.openDatabase({\r\n  name: \"newdb.db\",\r\n  location: \"default\",\r\n});\r\n\r\nexport default function App() {\r\n  const [arrivalLocation, setArrivalLocation] = useState(\"\");\r\n  const [departureLocation, setDepartureLocation] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [filteredTrains, setFilteredTrains] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchTrainData();\r\n  }, []);\r\n\r\n  const fetchTrainData = () => {\r\n    db.transaction((tx) => {\r\n      tx.executeSql(\r\n        \"SELECT * FROM trains\",\r\n        [],\r\n        (_, { rows }) => {\r\n          const data = rows._array;\r\n          setFilteredTrains(data);\r\n        },\r\n        (error) => {\r\n          console.error(\"Error fetching train data:\", error);\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleFormSubmit = () => {\r\n    db.transaction((tx) => {\r\n      tx.executeSql(\r\n        \"SELECT * FROM trains WHERE arrivalLocation=? AND departureLocation=? AND date=?\",\r\n        [arrivalLocation, departureLocation, date],\r\n        (_, { rows }) => {\r\n          const data = rows._array;\r\n          setFilteredTrains(data);\r\n        },\r\n        (error) => {\r\n          console.error(\"Error fetching filtered train data:\", error);\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\r\n      <Text>Select Your Train</Text>\r\n      <TextInput\r\n        placeholder=\"Arrival Location\"\r\n        value={arrivalLocation}\r\n        onChangeText={setArrivalLocation}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Departure Location\"\r\n        value={departureLocation}\r\n        onChangeText={setDepartureLocation}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Date\"\r\n        value={date}\r\n        onChangeText={setDate}\r\n      />\r\n      <Button title=\"Submit\" onPress={handleFormSubmit} />\r\n      <FlatList\r\n        data={filteredTrains}\r\n        keyExtractor={(item) => item.id.toString()}\r\n        renderItem={({ item }) => (\r\n          <View>\r\n            <Text>Arrival Location: {item.arrivalLocation}</Text>\r\n            <Text>Departure Location: {item.departureLocation}</Text>\r\n            <Text>Date: {item.date}</Text>\r\n            <Button title=\"Book Now\" onPress={() => {/* Handle booking */}} />\r\n          </View>\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}