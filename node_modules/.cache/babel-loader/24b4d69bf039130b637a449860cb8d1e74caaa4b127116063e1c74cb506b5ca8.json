{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\dilshi\\\\dilshi\\\\web_app3\\\\railway_app\\\\src\\\\administrator\\\\AdminPanel.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import Button from \"react-bootstrap/Button\";\n// import Form from \"react-bootstrap/Form\";\n// import Table from \"@mui/material/Table\";\n// import TableBody from \"@mui/material/TableBody\";\n// import TableCell from \"@mui/material/TableCell\";\n// import TableContainer from \"@mui/material/TableContainer\";\n// import TableHead from \"@mui/material/TableHead\";\n// import TableRow from \"@mui/material/TableRow\";\n// import Swal from \"sweetalert2\";\n// import { BrowserRouter } from \"react-router-dom\";\n\n// export default function AdminPanel() {\n//   const [trains, setTrains] = useState([]);\n//   const [newTrain, setNewTrain] = useState({\n//     arrivalLocation: \"\",\n//     depatureLocation: \"\",\n//     price: \" \",\n//     date: \"\",\n//   });\n\n//   const API = \"https://localhost:44327/api/Values\";\n\n//   useEffect(() => {\n//     getData();\n//   }, []);\n\n//   function getData() {\n//     fetch(API)\n//       .then((response) => response.json())\n//       .then((info) => {\n//         setTrains(info);\n//       })\n//       .catch((error) => console.error(\"Error fetching data:\", error));\n//   }\n\n//   function remove(id) {\n//     fetch(`${API}/${id}`, {\n//       method: \"DELETE\",\n//     })\n//       .then((response) => {\n//         if (!response.ok) {\n//           throw new Error(\"Failed to delete item\");\n//         }\n//         const updatedTrains = trains.filter((train) => train.id !== id);\n//         setTrains(updatedTrains);\n//       })\n//       .catch((error) => console.error(\"Error deleting item:\", error));\n//   }\n\n//   function handleInputChange(event) {\n//     const { name, value } = event.target;\n//     setNewTrain((prevState) => ({\n//       ...prevState,\n//       [name]: value,\n//     }));\n//   }\n\n//   function addTrain() {\n//     fetch(API, {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(newTrain),\n//     })\n//       .then((response) => {\n//         if (!response.ok) {\n//           throw new Error(\"Failed to add new train\");\n//         }\n//         return response.json();\n//       })\n//       .then((data) => {\n//         setTrains((prevTrains) => [...prevTrains, data]);\n//         setNewTrain({\n//           arrivalLocation: \"\",\n//           depatureLocation: \"\",\n//           price: \" \",\n//           date: \"\",\n//         });\n//         Swal.fire(\"Success\", \"New train added successfully!\", \"success\");\n//       })\n//       .catch((error) => {\n//         console.error(\"Error adding new train:\", error);\n//         Swal.fire(\"Error\", \"Failed to add new train\", \"error\");\n//       });\n//   }\n\n//   async function update(id) {\n//     const trainToUpdate = trains.find((train) => train.id === id);\n//     const { value: formValues } = await Swal.fire({\n//       title: \"Update Train Information\",\n//       html: `\n//                 <input id=\"swal-input1\" class=\"swal2-input\" placeholder=\"New Arrival Location\" value=\"${trainToUpdate.arrivalLocation}\">\n//                 <input id=\"swal-input2\" class=\"swal2-input\" placeholder=\"New Departure Location\" value=\"${trainToUpdate.depatureLocation}\">\n//                 <input id=\"swal-input3\" class=\"swal2-input\" placeholder=\"New Price\" value=\"${trainToUpdate.price}\">\n//                 <input id=\"swal-input4\" class=\"swal2-input\" type=\"date\" placeholder=\"New Date\" value=\"${trainToUpdate.date}\">\n//             `,\n//       focusConfirm: false,\n//       preConfirm: () => {\n//         return [\n//           document.getElementById(\"swal-input1\").value,\n//           document.getElementById(\"swal-input2\").value,\n//           document.getElementById(\"swal-input3\").value,\n//           document.getElementById(\"swal-input4\").value,\n//         ];\n//       },\n//     });\n\n//     if (formValues) {\n//       const updatedTrain = {\n//         ...trainToUpdate,\n//         arrivalLocation: formValues[0],\n//         depatureLocation: formValues[1],\n//         price: formValues[2],\n//         date: formValues[3],\n//       };\n\n//       fetch(`${API}/${id}`, {\n//         method: \"PUT\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(updatedTrain),\n//       })\n//         .then((response) => {\n//           if (!response.ok) {\n//             throw new Error(\"Failed to update train information\");\n//           }\n//           // Update state to reflect changes\n//           const updatedTrains = trains.map((train) =>\n//             train.id === id ? updatedTrain : train\n//           );\n//           setTrains(updatedTrains);\n//           // Optionally, display a success message\n//           Swal.fire(\n//             \"Success\",\n//             \"Train information updated successfully!\",\n//             \"success\"\n//           );\n//         })\n//         .catch((error) => {\n//           console.error(\"Error updating train information:\", error);\n//           Swal.fire(\"Error\", \"Failed to update train information\", \"error\");\n//         });\n//     }\n//   }\n\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminPanel() {\n  _s();\n  const [trains, setTrains] = useState([]);\n  const [newTrain, setNewTrain] = useState({\n    arrivalLocation: \"\",\n    departureLocation: \"\",\n    // Corrected spelling here\n    price: 0,\n    // Changed to integer type\n    date: \"\"\n  });\n  const API = \"https://localhost:44327/api/Values\";\n  useEffect(() => {\n    getData();\n  }, []);\n  function getData() {\n    fetch(API).then(response => response.json()).then(info => {\n      setTrains(info);\n    }).catch(error => console.error(\"Error fetching data:\", error));\n  }\n  function remove(id) {\n    fetch(`${API}/${id}`, {\n      method: \"DELETE\"\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Failed to delete item\");\n      }\n      const updatedTrains = trains.filter(train => train.id !== id);\n      setTrains(updatedTrains);\n    }).catch(error => console.error(\"Error deleting item:\", error));\n  }\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setNewTrain(prevState => ({\n      ...prevState,\n      [name]: name === \"price\" ? parseInt(value) : value // Parse price to integer\n    }));\n  }\n  function addTrain() {\n    fetch(API, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newTrain)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Failed to add new train\");\n      }\n      return response.json();\n    }).then(data => {\n      setTrains(prevTrains => [...prevTrains, data]);\n      setNewTrain({\n        arrivalLocation: \"\",\n        departureLocation: \"\",\n        price: 0,\n        // Reset price to zero\n        date: \"\"\n      });\n      Swal.fire(\"Success\", \"New train added successfully!\", \"success\");\n    }).catch(error => {\n      console.error(\"Error adding new train:\", error);\n      Swal.fire(\"Error\", \"Failed to add new train\", \"error\");\n    });\n  }\n  async function update(id) {\n    const trainToUpdate = trains.find(train => train.id === id);\n    const {\n      value: formValues\n    } = await Swal.fire({\n      title: \"Update Train Information\",\n      html: `\n                <input id=\"swal-input1\" class=\"swal2-input\" placeholder=\"New Arrival Location\" value=\"${trainToUpdate.arrivalLocation}\">\n                <input id=\"swal-input2\" class=\"swal2-input\" placeholder=\"New Departure Location\" value=\"${trainToUpdate.departureLocation}\">\n                <input id=\"swal-input3\" class=\"swal2-input\" placeholder=\"New Price\" value=\"${trainToUpdate.price}\">\n                <input id=\"swal-input4\" class=\"swal2-input\" type=\"date\" placeholder=\"New Date\" value=\"${trainToUpdate.date}\">\n            `,\n      focusConfirm: false,\n      preConfirm: () => {\n        return [document.getElementById(\"swal-input1\").value, document.getElementById(\"swal-input2\").value, document.getElementById(\"swal-input3\").value, document.getElementById(\"swal-input4\").value];\n      }\n    });\n    if (formValues) {\n      const updatedTrain = {\n        ...trainToUpdate,\n        arrivalLocation: formValues[0],\n        departureLocation: formValues[1],\n        price: parseInt(formValues[2]),\n        // Parse price to integer\n        date: formValues[3]\n      };\n      fetch(`${API}/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedTrain)\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(\"Failed to update train information\");\n        }\n        // Update state to reflect changes\n        const updatedTrains = trains.map(train => train.id === id ? updatedTrain : train);\n        setTrains(updatedTrains);\n        // Optionally, display a success message\n        Swal.fire(\"Success\", \"Train information updated successfully!\", \"success\");\n      }).catch(error => {\n        console.error(\"Error updating train information:\", error);\n        Swal.fire(\"Error\", \"Failed to update train information\", \"error\");\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      padding: \"2rem 0\",\n      backgroundColor: \"lightslategray\"\n    },\n    className: \"container_horizontal\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      style: {\n        width: \"800px\",\n        margin: \"auto\",\n        padding: \"1rem\",\n        border: \"1px solid black\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        gap: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3 \",\n        controlId: \"arrivalLocation\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Arrival Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"arrivalLocation\",\n          value: newTrain.arrivalLocation,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"departureLocation\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Departure Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"departureLocation\",\n          value: newTrain.departureLocation,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"price\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\" // Change type to number\n          ,\n          name: \"price\",\n          value: newTrain.price,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"date\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"date\",\n          name: \"date\",\n          value: newTrain.date,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"info\",\n        type: \"button\",\n        onClick: addTrain,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          maxWidth: \"1000px\",\n          margin: \"1rem auto\",\n          border: \"1px solid black\"\n        },\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                color: \"black\",\n                fontWeight: \"600\",\n                backgroundColor: \"lightblue\"\n              },\n              children: \"Edit or Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                color: \"black\",\n                fontWeight: \"600\",\n                backgroundColor: \"lightblue\"\n              },\n              children: \"Arrival Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                color: \"black\",\n                fontWeight: \"600\",\n                backgroundColor: \"lightblue\"\n              },\n              children: \"Departure Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                color: \"black\",\n                fontWeight: \"600\",\n                backgroundColor: \"lightblue\"\n              },\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                color: \"black\",\n                fontWeight: \"600\",\n                backgroundColor: \"lightblue\"\n              },\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: trains.map(train => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  margin: \"0 0.3rem\"\n                },\n                onClick: () => update(train.id),\n                variant: \"info\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => remove(train.id),\n                variant: \"info\",\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: train.arrivalLocation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: train.departureLocation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: train.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: train.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 17\n            }, this)]\n          }, train.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPanel, \"CV+ht2VIVDp5a7IRXJGNfbrf6n0=\");\n_c = AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","useEffect","Button","Form","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Swal","jsxDEV","_jsxDEV","AdminPanel","_s","trains","setTrains","newTrain","setNewTrain","arrivalLocation","departureLocation","price","date","API","getData","fetch","then","response","json","info","catch","error","console","remove","id","method","ok","Error","updatedTrains","filter","train","handleInputChange","event","name","value","target","prevState","parseInt","addTrain","headers","body","JSON","stringify","data","prevTrains","fire","update","trainToUpdate","find","formValues","title","html","focusConfirm","preConfirm","document","getElementById","updatedTrain","map","style","height","padding","backgroundColor","className","children","width","margin","border","display","alignItems","justifyContent","gap","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","onChange","variant","onClick","sx","maxWidth","color","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/dilshi/dilshi/web_app3/railway_app/src/administrator/AdminPanel.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import Button from \"react-bootstrap/Button\";\r\n// import Form from \"react-bootstrap/Form\";\r\n// import Table from \"@mui/material/Table\";\r\n// import TableBody from \"@mui/material/TableBody\";\r\n// import TableCell from \"@mui/material/TableCell\";\r\n// import TableContainer from \"@mui/material/TableContainer\";\r\n// import TableHead from \"@mui/material/TableHead\";\r\n// import TableRow from \"@mui/material/TableRow\";\r\n// import Swal from \"sweetalert2\";\r\n// import { BrowserRouter } from \"react-router-dom\";\r\n\r\n// export default function AdminPanel() {\r\n//   const [trains, setTrains] = useState([]);\r\n//   const [newTrain, setNewTrain] = useState({\r\n//     arrivalLocation: \"\",\r\n//     depatureLocation: \"\",\r\n//     price: \" \",\r\n//     date: \"\",\r\n//   });\r\n\r\n//   const API = \"https://localhost:44327/api/Values\";\r\n\r\n//   useEffect(() => {\r\n//     getData();\r\n//   }, []);\r\n\r\n//   function getData() {\r\n//     fetch(API)\r\n//       .then((response) => response.json())\r\n//       .then((info) => {\r\n//         setTrains(info);\r\n//       })\r\n//       .catch((error) => console.error(\"Error fetching data:\", error));\r\n//   }\r\n\r\n//   function remove(id) {\r\n//     fetch(`${API}/${id}`, {\r\n//       method: \"DELETE\",\r\n//     })\r\n//       .then((response) => {\r\n//         if (!response.ok) {\r\n//           throw new Error(\"Failed to delete item\");\r\n//         }\r\n//         const updatedTrains = trains.filter((train) => train.id !== id);\r\n//         setTrains(updatedTrains);\r\n//       })\r\n//       .catch((error) => console.error(\"Error deleting item:\", error));\r\n//   }\r\n\r\n//   function handleInputChange(event) {\r\n//     const { name, value } = event.target;\r\n//     setNewTrain((prevState) => ({\r\n//       ...prevState,\r\n//       [name]: value,\r\n//     }));\r\n//   }\r\n\r\n//   function addTrain() {\r\n//     fetch(API, {\r\n//       method: \"POST\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//       body: JSON.stringify(newTrain),\r\n//     })\r\n//       .then((response) => {\r\n//         if (!response.ok) {\r\n//           throw new Error(\"Failed to add new train\");\r\n//         }\r\n//         return response.json();\r\n//       })\r\n//       .then((data) => {\r\n//         setTrains((prevTrains) => [...prevTrains, data]);\r\n//         setNewTrain({\r\n//           arrivalLocation: \"\",\r\n//           depatureLocation: \"\",\r\n//           price: \" \",\r\n//           date: \"\",\r\n//         });\r\n//         Swal.fire(\"Success\", \"New train added successfully!\", \"success\");\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"Error adding new train:\", error);\r\n//         Swal.fire(\"Error\", \"Failed to add new train\", \"error\");\r\n//       });\r\n//   }\r\n\r\n//   async function update(id) {\r\n//     const trainToUpdate = trains.find((train) => train.id === id);\r\n//     const { value: formValues } = await Swal.fire({\r\n//       title: \"Update Train Information\",\r\n//       html: `\r\n//                 <input id=\"swal-input1\" class=\"swal2-input\" placeholder=\"New Arrival Location\" value=\"${trainToUpdate.arrivalLocation}\">\r\n//                 <input id=\"swal-input2\" class=\"swal2-input\" placeholder=\"New Departure Location\" value=\"${trainToUpdate.depatureLocation}\">\r\n//                 <input id=\"swal-input3\" class=\"swal2-input\" placeholder=\"New Price\" value=\"${trainToUpdate.price}\">\r\n//                 <input id=\"swal-input4\" class=\"swal2-input\" type=\"date\" placeholder=\"New Date\" value=\"${trainToUpdate.date}\">\r\n//             `,\r\n//       focusConfirm: false,\r\n//       preConfirm: () => {\r\n//         return [\r\n//           document.getElementById(\"swal-input1\").value,\r\n//           document.getElementById(\"swal-input2\").value,\r\n//           document.getElementById(\"swal-input3\").value,\r\n//           document.getElementById(\"swal-input4\").value,\r\n//         ];\r\n//       },\r\n//     });\r\n\r\n//     if (formValues) {\r\n//       const updatedTrain = {\r\n//         ...trainToUpdate,\r\n//         arrivalLocation: formValues[0],\r\n//         depatureLocation: formValues[1],\r\n//         price: formValues[2],\r\n//         date: formValues[3],\r\n//       };\r\n\r\n//       fetch(`${API}/${id}`, {\r\n//         method: \"PUT\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify(updatedTrain),\r\n//       })\r\n//         .then((response) => {\r\n//           if (!response.ok) {\r\n//             throw new Error(\"Failed to update train information\");\r\n//           }\r\n//           // Update state to reflect changes\r\n//           const updatedTrains = trains.map((train) =>\r\n//             train.id === id ? updatedTrain : train\r\n//           );\r\n//           setTrains(updatedTrains);\r\n//           // Optionally, display a success message\r\n//           Swal.fire(\r\n//             \"Success\",\r\n//             \"Train information updated successfully!\",\r\n//             \"success\"\r\n//           );\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error(\"Error updating train information:\", error);\r\n//           Swal.fire(\"Error\", \"Failed to update train information\", \"error\");\r\n//         });\r\n//     }\r\n//   }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default function AdminPanel() {\r\n  const [trains, setTrains] = useState([]);\r\n  const [newTrain, setNewTrain] = useState({\r\n    arrivalLocation: \"\",\r\n    departureLocation: \"\", // Corrected spelling here\r\n    price: 0, // Changed to integer type\r\n    date: \"\",\r\n  });\r\n\r\n  const API = \"https://localhost:44327/api/Values\";\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  function getData() {\r\n    fetch(API)\r\n      .then((response) => response.json())\r\n      .then((info) => {\r\n        setTrains(info);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching data:\", error));\r\n  }\r\n\r\n  function remove(id) {\r\n    fetch(`${API}/${id}`, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to delete item\");\r\n        }\r\n        const updatedTrains = trains.filter((train) => train.id !== id);\r\n        setTrains(updatedTrains);\r\n      })\r\n      .catch((error) => console.error(\"Error deleting item:\", error));\r\n  }\r\n\r\n  function handleInputChange(event) {\r\n    const { name, value } = event.target;\r\n    setNewTrain((prevState) => ({\r\n      ...prevState,\r\n      [name]: name === \"price\" ? parseInt(value) : value, // Parse price to integer\r\n    }));\r\n  }\r\n\r\n  function addTrain() {\r\n    fetch(API, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(newTrain),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to add new train\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setTrains((prevTrains) => [...prevTrains, data]);\r\n        setNewTrain({\r\n          arrivalLocation: \"\",\r\n          departureLocation: \"\",\r\n          price: 0, // Reset price to zero\r\n          date: \"\",\r\n        });\r\n        Swal.fire(\"Success\", \"New train added successfully!\", \"success\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding new train:\", error);\r\n        Swal.fire(\"Error\", \"Failed to add new train\", \"error\");\r\n      });\r\n  }\r\n\r\n  async function update(id) {\r\n    const trainToUpdate = trains.find((train) => train.id === id);\r\n    const { value: formValues } = await Swal.fire({\r\n      title: \"Update Train Information\",\r\n      html: `\r\n                <input id=\"swal-input1\" class=\"swal2-input\" placeholder=\"New Arrival Location\" value=\"${trainToUpdate.arrivalLocation}\">\r\n                <input id=\"swal-input2\" class=\"swal2-input\" placeholder=\"New Departure Location\" value=\"${trainToUpdate.departureLocation}\">\r\n                <input id=\"swal-input3\" class=\"swal2-input\" placeholder=\"New Price\" value=\"${trainToUpdate.price}\">\r\n                <input id=\"swal-input4\" class=\"swal2-input\" type=\"date\" placeholder=\"New Date\" value=\"${trainToUpdate.date}\">\r\n            `,\r\n      focusConfirm: false,\r\n      preConfirm: () => {\r\n        return [\r\n          document.getElementById(\"swal-input1\").value,\r\n          document.getElementById(\"swal-input2\").value,\r\n          document.getElementById(\"swal-input3\").value,\r\n          document.getElementById(\"swal-input4\").value,\r\n        ];\r\n      },\r\n    });\r\n\r\n    if (formValues) {\r\n      const updatedTrain = {\r\n        ...trainToUpdate,\r\n        arrivalLocation: formValues[0],\r\n        departureLocation: formValues[1],\r\n        price: parseInt(formValues[2]), // Parse price to integer\r\n        date: formValues[3],\r\n      };\r\n\r\n      fetch(`${API}/${id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(updatedTrain),\r\n      })\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(\"Failed to update train information\");\r\n          }\r\n          // Update state to reflect changes\r\n          const updatedTrains = trains.map((train) =>\r\n            train.id === id ? updatedTrain : train\r\n          );\r\n          setTrains(updatedTrains);\r\n          // Optionally, display a success message\r\n          Swal.fire(\r\n            \"Success\",\r\n            \"Train information updated successfully!\",\r\n            \"success\"\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error updating train information:\", error);\r\n          Swal.fire(\"Error\", \"Failed to update train information\", \"error\");\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100vh\",\r\n        padding: \"2rem 0\",\r\n        backgroundColor: \"lightslategray\",\r\n      }}\r\n      className=\"container_horizontal\"\r\n    >\r\n      <Form\r\n        style={{\r\n          width: \"800px\",\r\n          margin: \"auto\",\r\n          padding: \"1rem\",\r\n          border: \"1px solid black\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          gap: \"1rem\",\r\n        }}\r\n      >\r\n        <Form.Group className=\"mb-3 \" controlId=\"arrivalLocation\">\r\n          <Form.Label>Arrival Location</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"arrivalLocation\"\r\n            value={newTrain.arrivalLocation}\r\n            onChange={handleInputChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"departureLocation\">\r\n          <Form.Label>Departure Location</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"departureLocation\"\r\n            value={newTrain.departureLocation}\r\n            onChange={handleInputChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"price\">\r\n          <Form.Label>Price</Form.Label>\r\n          <Form.Control\r\n            type=\"number\" // Change type to number\r\n            name=\"price\"\r\n            value={newTrain.price}\r\n            onChange={handleInputChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"date\">\r\n          <Form.Label>Date</Form.Label>\r\n          <Form.Control\r\n            type=\"date\"\r\n            name=\"date\"\r\n            value={newTrain.date}\r\n            onChange={handleInputChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"info\" type=\"button\" onClick={addTrain}>\r\n          Add\r\n        </Button>\r\n      </Form>\r\n      <TableContainer>\r\n        <Table\r\n          sx={{\r\n            maxWidth: \"1000px\",\r\n            margin: \"1rem auto\",\r\n            border: \"1px solid black\",\r\n          }}\r\n          aria-label=\"simple table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell\r\n                style={{\r\n                  color: \"black\",\r\n                  fontWeight: \"600\",\r\n                  backgroundColor: \"lightblue\",\r\n                }}\r\n              >\r\n                Edit or Delete\r\n              </TableCell>\r\n              <TableCell\r\n                style={{\r\n                  color: \"black\",\r\n                  fontWeight: \"600\",\r\n                  backgroundColor: \"lightblue\",\r\n                }}\r\n              >\r\n                Arrival Location\r\n              </TableCell>\r\n              <TableCell\r\n                style={{\r\n                  color: \"black\",\r\n                  fontWeight: \"600\",\r\n                  backgroundColor: \"lightblue\",\r\n                }}\r\n              >\r\n                Departure Location\r\n              </TableCell>\r\n              <TableCell\r\n                style={{\r\n                  color: \"black\",\r\n                  fontWeight: \"600\",\r\n                  backgroundColor: \"lightblue\",\r\n                }}\r\n              >\r\n                Price\r\n              </TableCell>\r\n              <TableCell\r\n                style={{\r\n                  color: \"black\",\r\n                  fontWeight: \"600\",\r\n                  backgroundColor: \"lightblue\",\r\n                }}\r\n              >\r\n                Date\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {trains.map((train) => (\r\n              <TableRow key={train.id}>\r\n                <TableCell>\r\n                  <Button\r\n                    style={{ margin: \"0 0.3rem\" }}\r\n                    onClick={() => update(train.id)}\r\n                    variant=\"info\"\r\n                  >\r\n                    Update\r\n                  </Button>\r\n                  <Button onClick={() => remove(train.id)} variant=\"info\">\r\n                    Remove\r\n                  </Button>\r\n                </TableCell>\r\n                <TableCell>{train.arrivalLocation}</TableCell>\r\n                <TableCell>{train.departureLocation}</TableCell>\r\n                <TableCell>{train.price}</TableCell>\r\n                <TableCell>{train.date}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAYA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,IAAI,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC;IAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}